---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.MassAccess:massaccess.yml
  - docassemble.ALAffidavitOfIndigency:affidavit_body.yml
  - docassemble.MATCTheme:matc_theme.yml
---
metadata:
  title: >-
    Small Claims
  short title: >-
    Small Claims
  description: |-
    This interview helps a Massachusetts plaintiff file a small claim with the court.
  can_I_use_this_form: |
    If you are a plaintiff, you can use this interview to file a notice of your small claim with the court.
  before_you_start: |
    This interview will help you to file a notice of your small claim with the court.
  maturity: production
  estimated_completion_minutes: 60
  estimated_completion_delta: 30
  LIST_topics: 
    - "MO-10-00-00-00"
  tags:
    - "MO-10-00-00-00"
  authors:
    - Nava Ebadollahi
    - Mark Marotta
    - Nicole Dimitri
    - Sam Glover
    - Ary Ascencio
  original_form: []
  original_form_published_on: 2024-06-05
  allowed_courts: 
    - "Boston Municipal Court"
    - "Housing Court"
    - "District Court" 
  typical_role: "plaintiff"
  al_weaver_version: "1.10.3"
  generated_on: "2024-06-05"
  languages:
    - en 
  jurisdiction: NAM-US-US+MA
  review_date: 2024-06-05
  form_titles:
    - Small claims
  form_numbers: []
  update_notes: |
---
code: |
  # Default country and state for addresses
  AL_DEFAULT_COUNTRY = "US"
  AL_DEFAULT_STATE = "MA"
---
code: |
  github_repo_name = 'docassemble-MATCSmallClaims'
---
code: |
  interview_short_title = "File a small claim"
---
code: |
  al_form_type = "starts_case"  
---
objects:
  - users: ALPeopleList.using(complete_attribute=['name.first', 'address.address', 'phone_number'])
  - attorneys: ALPeopleList.using(complete_attribute=['bbo_number', 'address.address', 'phone_number'])
  - other_parties: ALPeopleList.using(there_are_any=True, complete_attribute=['address.address', 'phone_number', 'is_current_military'])
  - exhibit_attachment: ALExhibitDocument.using(
          title="Exhibits",
          filename="exhibits",
          add_page_numbers=True,
          include_table_of_contents=True,
          include_exhibit_cover_pages=True,
        )
---
sections:
  - introduction: Getting started
  - required_info: Before you file
  - plaintiff_info: Plaintiff information
  - defendant_info: Defendant information
  - court_selection: Court selection
  - claim_details: Your claim details
  - mediation: Mediation
  - wants_fee_waiver: Fee waiver
  - review_small_claims: Review your answers
  - download_small_claims: Download and file your claim
---
#################### Interview Order #####################
id: interview_order_small_claims
code: |
  allowed_courts = ['District Court', 'Boston Municipal Court', 'Housing Court']

  nav.set_section("introduction")
  terms_accepted
  
  nav.set_section("required_info")
  small_claims_intro
  filing_fee_acknowledged

  nav.set_section("plaintiff_info")
  al_person_answering
  if al_person_answering == "attorney":
    attorneys.there_are_any = True
  else:
    attorneys.there_are_any = False

  attorneys.gather()
  if attorneys.number_gathered() > 0:
    attorneys[0].bbo_number
    attorneys[0].address.address
    attorneys[0].phone_number
  set_progress(14)

  users.gather()
  if users.number_gathered() > 0:
    users[0].address.address
    users[0].phone_number
  set_parts(subtitle=str(users))
  set_progress(28)

  nav.set_section("defendant_info")
  other_parties.gather()
  defendants
  other_parties[0].address.address
  other_parties[0].phone_number
  other_parties[0].is_current_military

  nav.set_section("court_selection")
  set_parts(subtitle=str(users))
  set_progress(42)
  trial_court.department

  nav.set_section("claim_details")
  reason_for_suing_defendant
  defendant_owes_amount
  filing_fee
  if exhibit_attachment.exhibits.has_exhibits:
    exhibit_attachment.exhibits.gather()

  nav.set_section("mediation")
  is_willing_mediation
  trial_court
  set_progress(56)

  nav.set_section("wants_fee_waiver")
  if wants_fee_waiver:
    is_indigent
    set_fee_waiver_defaults

  nav.set_section("review_small_claims")
  users[0].states_above_true
  interview_order_small_claims = True
---
###################### Main Order ######################
mandatory: True
code: |
  interview_order_small_claims  
  terms_accepted
  small_claims_intro
  signature_date
  small_claims_preview_question 
  users[0].signature
  store_variables_snapshot(
      persistent=True,
      data={
          "zip": showifdef("users[0].address.zip"),
          "reached_interview_end": True,
      },
  )
  small_claims_download
---
features:
  progress bar: True
  css: styles.css
---
#################### Terms & conditions #####################
id: terms_and_privacy
section: introduction
question: |
  CourtFormsOnline: File a Small Claim
subquestion: |

  Before you start the small claims interview, you must agree to the terms of use.

  ---
  
  ${ display_template(al_terms_of_use, scrollable=True) }

fields:
  - I agree to the terms of use: acknowledged_information_use
    datatype: yesnowide
    grid: 8
validation code: |
  if not acknowledged_information_use:
    validation_error("You must agree to the terms of use to continue.", field="acknowledged_information_use")
continue button field: terms_accepted
---
#################### Small Claims Interview Info #####################
id: small_claims_interview_info
continue button field: small_claims_intro
question: |
  Before you file a small claim
subquestion: |
  This site does not provide legal advice. If you need legal help, contact your local [legal aid provider](https://www.mass.gov/legal-aid).

  ---

  To file your small claim, you will need to know:   

  - The full name of each person or business you're filing the claim against
  - The reasons for your claim and how you calculated your claim amount
  - The military status of the people on the other side of your claim,  
    to confirm that they are not on active duty while the claim is being decided

  When you finish the interview, you can:
  
  - File your claim electronically, or  
  - Download and print your forms to bring to the court in person 

  Most people take about 30 minutes to complete this interview.
---
id: small_claims_filing_fee
continue button field: filing_fee_acknowledged
question: |
  Filing fees for small claims
subquestion: |
  To file a small claim, you must also pay a filing fee based on the amount of your claim. If you cannot afford the filing fee, you can use this interview to ask the court if you may file your small claim for free.

  Amount of your claim | Filing fee
  ---------------------|-----------  
  $500 or less         | $40  
  $501–2,000           | $50  
  $2,001–5,000         | $100  
  $5,001 or more       | $150  
---
id: is_user_an_attorney
question: | 
  Are you an attorney?
fields:
  - no label: al_person_answering
    datatype: radio
    choices: 
      - Yes: attorney
      - No: user
    label above field: True
    under text: |
      If you are an attorney, but you are filing this claim on your own behalf, select No.
---
id: is user an attorney
question: | 
  Are you an attorney?
fields:
  - no label: al_person_answering
    datatype: radio
    choices: 
      - Yes: attorney
      - No: user
    label above field: True
    under text: |
      If you are an attorney, but you are filing this claim on your own behalf, select "No."
---
id: attorney information
sets:
  - attorneys[i].name.first
  - attorneys[i].name.last
  - attorneys[i].name.middle
  - attorneys[i].name.suffix
generic object: ALPeopleList
question: |
  % if i == 0:
  What is your name?
  % else:
  Name of the first ${ noun_plural(attorneys.object_name(), 1) }
  % endif
fields:
  - code: |
      attorneys[i].name_fields()
  - "BBO number": attorneys[i].bbo_number
    maxlength: 6
    required: True
    under text: |
      [Click here](https://www.massbbo.org/bbolookup.php) to look up your BBO number.
---
sets:
  - attorneys[i].address.address
  - attorneys[i].address.city
  - attorneys[i].address.zip
  - attorneys[i].address.unit
  - attorneys[i].address.state
  - attorneys[i].address.country
id: attorney's address
generic object: ALIndividual
question: |
  % if i == 0 and al_person_answering == "attorney":
  What is your address?
  % else:
  What is ${ attorneys[i].name }'s address?
  % endif
fields:
  - code: |
      attorneys[i].address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE)
---
id: attorney's additional contact information
generic object: ALIndividual
question: |
  % if i == 0 and al_person_answering == "attorney":
  What is your contact information?
  % else:
  What is ${ attorneys[i].name }'s contact information?
  % endif
fields:
  - Phone: attorneys[i].phone_number
    required: True
  - Email: attorneys[i].email_address
    required: False
---
generic object: ALPeopleList
id: additional attorneys 
question: |
  Are there any other attorneys representing the plaintiff?
subquestion: |
  While it is not common to have more than one attorney in a small claim, you may list more than one. 
fields:
  - no label: attorneys.there_is_another
    datatype: yesnoradio
---
sets:
  - users[i].name.first
  - users[i].name.last
  - users[i].name.middle
  - users[i].name.suffix  
id: plaintiff_name
question: |
  % if i == 0 and al_person_answering == "user":
  What is your name?
  % else:
    % if al_person_answering == "attorney":
    What is the ${ ordinal(i) } plaintiff's name?
    % else:
    What is the name of the ${ ordinal_number(i) } plaintiff?
    % endif
  % endif
fields:
  - field: users[i].name.first
    label: First name
    required: True
  - field: users[i].name.middle
    label: Middle name
    required: False
  - field: users[i].name.last
    label: Last name
    required: True
  - field: users[i].name.suffix
    label: Suffix (such as Jr., Sr., or III; leave blank if none)
    required: False
---
id: plaintiff's address
question: |
  % if i == 0 and al_person_answering == "user":
  What is your address?
  % else:
  What is ${ users[i] }'s address?
  % endif
subquestion: |
  Be sure to include a house or building number in your street address.
fields:
  - label: |
      % if i > 0 and al_person_answering == "user":
      Same as your address
      % else:
      Same as ${ users[0] }'s address
      % endif
    field: users[i].address
    datatype: object_radio
    choices:
      - users[0].address if defined("users[0].address.address") else None
    object labeler: |
      lambda y: y.on_one_line()      
    none of the above: |
      Somewhere else
    disable others: True
    show if:
      code: |
        i > 0 and defined("users[0].address.address")
  - ${ users[i].address.address_label}: users[i].address.address
    address autocomplete: True
  - ${ users[i].address.unit_label}: users[i].address.unit
    required: False
  - ${ users[i].address.city_label}: users[i].address.city
  - ${ users[i].address.state_label}: users[i].address.state
    code: |
      states_list(country_code=AL_DEFAULT_COUNTRY)
    default: ${ AL_DEFAULT_STATE }
  - ${ users[i].address.zip_label}: users[i].address.zip
    required: True
validation code: |
  for key in ['address']:
    if hasattr(users[i].address, key) and getattr(users[i].address, key) is not None:
      if not any(char.isdigit() for char in str(getattr(users[i].address, key))):
        validation_error("Include at least one number in your street address", field="users[i].address.address")
---
template: why_contact_info_needed_template
subject: |
  Why do I need to give my contact information?
content: | 
  The court needs to be able to communicate with you about your claim. Make sure to include at least one way to reach you other than by mail.
---
id: first plaintiff's contact information
question: |
  % if al_person_answering == "user":
  What is your contact information?
  % else:
  What is ${ users[0] }'s contact information?
  % endif
subquestion: |
  % if al_person_answering == "user":
  Include at least **one** way to reach you other than by mail.
  
  ${ collapse_template(why_contact_info_needed_template) }
  % else:
  Include at least **one** way to reach ${ users[0] } other than by mail.
  % endif
fields:  
  - Phone number: users[0].phone_number
    required: False
  - Email address: users[0].email    
    datatype: email
    required: False
  - Other ways to reach you: users[0].other_contact_method
    input type: area
    required: False
    help: |
      If you do not have a phone number or email address, explain how else the court can reach you. For example, you could use a friend's phone number, but the friend should be someone you can rely on to give you updates from the court.
validation code: |
  if (not showifdef('users[0].phone_number') and \
      (not showifdef('users[0].mobile_number')) and \
      (not showifdef('users[0].email')) and \
      (not showifdef('users[0].other_contact_method'))):
    validation_error(word("You need to provide at least one contact method."), field="users[0].other_contact_method")
---
id: additional plaintiff's contact information
question: |
  What is ${ users[i] }'s contact information?
subquestion: |
  Include at least **one** way to reach ${ users[i] } other than by mail.
fields:  
  - Phone number: users[i].phone_number
    required: False
  - Email address: users[i].email    
    datatype: email
    required: False
  - Other ways to reach you: users[i].other_contact_method
    input type: area
    required: False
    help: |
       If you do not have a phone number or email address, explain how else the court can reach you. For example, you could use a friend's phone number, but the friend should be someone you can rely on to give you updates from the court.
validation code: |
  if (not showifdef('users[i].phone_number') and \
      (not showifdef('users[i].mobile_number')) and \
      (not showifdef('users[i].email')) and \
      (not showifdef('users[i].other_contact_method'))):
    validation_error(word("You need to provide at least one contact method."), field="users[i].other_contact_method")
---
id: any other opposing parties
question: |
  % if user_started_case:
  Is there anyone else on the other side of your claim?
  % else:
  Is there anyone else on your side of the claim?
  % endif
fields:
  - no label: other_parties.there_is_another
    datatype: yesnoradio
---
id: any other plaintiffs
question: |
  % if al_person_answering == "attorney":
  Are there any additional plaintiffs?
  % else:
  Is there anyone else on your side of the case?
  % endif
subquestion: |
  % if len(users.elements) > 1:  
  So far, you have told us about ${comma_and_list(users.complete_elements())}.
  % endif
fields:
  - no label: users.there_is_another
    datatype: yesnoradio
---
if: |
  len(all_matches) and all_courts.filter_courts(allowed_courts) 
id: choose a court (courts matching provided address were found)
question: |
  % if al_form_type == 'starts_case':
  Where do you want to file your claim?
  % elif al_form_type == 'appeal':
  In which trial court did you first file your claim?
  % else:
  Where was your claim originally filed?
  % endif
subquestion: |
  % if not al_form_type == 'starts_case':
  Find the court name on your documents and match it with the court name here.
  % endif

  % if len(all_matches) > 0:
  Below is a map of the court(s) that serve
  the address you gave us, 
  % if isinstance(addresses_to_search, Iterable):
  ${comma_and_list([address.on_one_line() for address in addresses_to_search],comma_string='; ')}.
  % else:
  ${addresses_to_search.on_one_line()}
  % endif
  
  ${map_of(combined_locations(all_matches))}
  % endif
  
  ${ collapse_template(how_to_pick_court_help_template) }  
fields:
  - no label: trial_court
    datatype: object_radio
    choices: all_matches
    none of the above: True
    disable others: True
    object labeler: court_short_description
    show if: 
      code: |
        len(all_matches)      
  - note: |
      Does the list above look wrong? If your case was filed in
      a court we didn't list, choose from the full list below.
    show if: 
      code: |
        len(all_matches)
  - no label: trial_court
    datatype: object
    object labeler: court_short_label
    choices: all_courts.filter_courts(allowed_courts)
    css class: not-required-if-disabled
---
template: claims_greater_than_7000
subject:  |
  Claims greater than $7,000
content:  |
  The base amount you are suing for (including the value of property) must be $7,000 or 
  less. There are two exceptions:
  
  1. If your claim is based on property damage from an automobile accident, then your claim amount may be more than $7,000.
  2. If you are suing for unfair and deceptive practices under [Mass. Gen. Laws ch. 93A](https://malegislature.gov/Laws/GeneralLaws/PartI/TitleXV/Chapter93A) or under the security deposit statute, [Mass. Gen. Laws ch. 186, § 15B](https://malegislature.gov/Laws/GeneralLaws/PartII/TitleI/Chapter186/Section15B), the court may award additional damages above the $7,000 limit. However, the base amount of your claim still must be $7,000 or less.
---
id: statement of claim
question: Explain what happened in your case
subquestion: |
  Tell the court what happened and explain why you are suing the defendant as clearly as you can. 
  Be sure to include:
  
  * The dates when the main events of your case took place, if you remember them
  * The amount of money you are asking the court to award you
  * How you determined the amount of money you are owed

  If a law allows you to ask the court to award double or triple the amount of money that you are owed, then you should also explain how the defendant harmed you and why the court should award you more money damages for that harm.

  You will be able to attach supporting documents on the next screen.
fields:
  - Reason for your claim: reason_for_suing_defendant
    input type: area
    rows: 10
    label above field: True
---
id: claim amount
question: |
  How much money does the defendant owe you in this case?
fields: 
  - Amount owed: defendant_owes_amount
    datatype: currency
    min: 0
  - "Your claim is for more than $7,000": reason_pexceeds_7000
    datatype: radio
    choices:
      - My claim is based on property damage from an auto accident
      - I am suing for unfair and deceptive practices under Chapter 93A or under the security deposit statute. The base amount of my claim is still $7,000 or less
    under text: ${ collapse_template(claims_greater_than_7000) } 
    js show if: |
      val("defendant_owes_amount") > 7000
  - Filing fee: filing_fee
    datatype: currency
    input type: hidden
    min: 0
  - html: |
      <div class="da-container row">
        <span for="filing_fee_display" class="col-md-4 datext-right">Filing fee</span>
        <span class="col-md-8" aria-live="polite">
          $<span id="filing_fee_display">--</span>
        </span>
      </div>
script: |
  <script>
    const fees = [
      {
        min: 0,
        max: 500,
        fee: 40,
      },
      {
        min: 501,
        max: 2000,
        fee: 50,
      },
      {
        min: 2001,
        max: 5000,
        fee: 100,
      },
      {
        min: 5001,
        max: "none",
        fee: 150,
      }
    ];
  
    function getFilingFee() {
      let claimAmount = val("defendant_owes_amount");
      if (!claimAmount) {
        setField("filing_fee", null);
        $("#filing_fee_display").text('--');
        return;
      }
      fees.forEach((el) => {
        if (claimAmount >= el.min && (claimAmount <= el.max || el.max === "none")) {
          setField("filing_fee", el.fee);
          $("#filing_fee_display").text(el.fee);
        }
      });
    }
    if ($(getField("defendant_owes_amount")).val()) {
      getFilingFee();
    }
    $(getField("defendant_owes_amount")).on("change", getFilingFee);
  </script>  
---
id: mediation_question
mandatory: True
question: |
  Do you want to try mediation to settle your small claim?
subquestion: |  
 ${collapse_template(mediation_template)}
fields:
  - "Would you like to try mediation?": is_willing_mediation
    datatype: yesnoradio
---
template: mediation_template
subject: What is mediation?
content: |
 - Mediation is a way to settle your small claim without going to court.
 - During mediation, the parties in a lawsuit sit down with a neutral person, called a mediator, to talk out a solution to their legal problem.
 - If you try mediation and it doesn't resolve your claim, you may still take your claim to trial later.
---
id: Tell us about a court
question: |
  % if al_form_type == 'starts_case':
  Where do you want to file your claim?
  % elif al_form_type == 'appeal':
  In which trial court was your claim first filed?
  % else:
  Where is your claim filed?
  % endif
subquestion: |
  % if not al_form_type == 'starts_case':
  Look at your court paperwork. Match the name listed there.
  % endif
  
  ${ collapse_template(how_to_pick_court_help_template) }  
  
  You can file a small claim in one of three departments, including the District Court, Boston Municipal Court, or Housing Court.

  You may file your small claim in a District or Boston Municipal Court where:
  - at least one plaintiff lives, works, or has a place of business or
  - at least one defendant lives, works, or has a place of business or
  - the rental property is located, if your claim is for a landlord-tenant issue.

  You may file your small claim in a Housing Court where:
  - the rental property is located, if your claim is for a landlord-tenant issue.
---
sets:
  - other_parties[i].name.first
  - other_parties[i].name.last
  - other_parties[i].name.middle
  - other_parties[i].name.suffix
id: names of opposing parties
question: |
  % if user_started_case:
  Who are you filing this claim against?
  % else:
  Who is filing this claim against you?
  % endif

fields:      
  - field: other_parties[i].person_type
    label: Are you filing against a person or a business?
    input type: radio
    required: True
    choices:
      - Person: person
      - Business or organization: business

  - note: |
      To find the legal name and address of a corporation, visit the Corporate Records Division of the Secretary of State’s Office website by clicking [here](https://corp.sec.state.ma.us/corpweb/CorpSearch/CorpSearch.aspx).
      
      If the defendant is not a corporation, and is doing business under a trade name ("doing business as," or d/b/a): 
    
      - Verify the name by calling the city or town hall where the business is located.
    
      - Any entity that does business under a trade name must register in the local city or town clerk's office where the business is located.

    show if:
      variable: other_parties[i].person_type
      is: business
  
  - field: other_parties[i].name.first
    label: First name
    required: True
    show if: 
      variable: other_parties[i].person_type
      is: person

  - field: other_parties[i].name.middle
    label: Middle name
    required: False
    show if: 
      variable: other_parties[i].person_type
      is: person

  - field: other_parties[i].name.last
    label: Last name
    required: True
    show if: 
      variable: other_parties[i].person_type
      is: person

  - field: other_parties[i].name.suffix
    label: Suffix (such as Jr., Sr., or III; leave blank if none)
    required: False
    show if: 
      variable: other_parties[i].person_type
      is: person
    code: |
      name_suffix()

  - field: other_parties[i].name.first
    label: Name of business or organization
    required: True
    show if: 
      variable: other_parties[i].person_type
      is: business
---
id: opposing_parties_contact_information
question: |
  What is ${other_parties[i]}'s contact information?
subquestion: |  
  ${collapse_template(defendant_contact_template)}
fields:
  - Phone: other_parties[i].phone_number
    required: False
  - Email: other_parties[i].email_address
    required: False
---
template: defendant_contact_template
subject: What if I don't know the defendant's contact information?
content: |
  While you don’t have to know the defendant’s contact info right now, sharing it here can help the court process your case faster. If you don't know how to contact the defendant, leave this section blank.
---
id: military_affidavit_question
mandatory: True
question: | 
  % if other_parties.number() > 1:
  Is ${other_parties[i]} in the military?
  % else:
  Is the defendant in the military?
  % endif
subquestion: |  
  ${collapse_template(why_military_template)}  
fields:
  - "Does ${other_parties[i]} currently serve in the military?": other_parties[i].is_current_military
    datatype: yesnomaybe
  - note: |
      1. If you know the defendant’s **date of birth** or **social security number**, you can check their military status on the [SCRA Website](https://scra.dmdc.osd.mil/scra/#/home). If you use the SCRA Website, you must send a copy of your search results to the court. The SRCA website will create this search results certificate for you.
      
      2. If you don't use the SCRA Website, explain how else you know the defendant's military status. For example, you may know if the defendant is in the military just by talking with them. You can also write to a specific branch of the military, listed [here](https://www.defense.gov/Resources/Military-Departments/), to confirm whether the defendant is on active duty.
      
      In either case, tell us about your search results or correspondences.
    js show if: |
      val("other_parties[i].is_current_military") === "None"
  - "I still don't know": still_unsure
    datatype: yesno
    js show if: |
      val("other_parties[i].is_current_military") === "None"
  - "If yes, how do you know?": other_parties[i].military_affidavit_facts
    input type: area
    maxlength: 1395
    show if:
      variable: other_parties[i].is_current_military
      is: True
  - "Why don't you know ${other_parties[i]}'s military status?": other_parties[i].military_affidavit_facts
    input type: area
    maxlength: 1395
    js show if: | 
      val("still_unsure") == true && val("other_parties[i].is_current_military") === "None"
  - note: |
      **Note:** the court may require you to post a bond or may issue other orders to protect the rights of any defendant on active military duty.
    show if: still_unsure
---
template: why_military_template
subject: Why do I have to provide the defendant's military status?
content: |
  - **Federal law,** including the Servicemembers Civil Relief Act (SCRA), protects active-duty military members in legal cases.  
  - If the defendant is in the military, the court may need to pause the case or take extra steps before issuing a judgment against them.  
  - This ensures that service members are not unfairly disadvantaged while fulfilling their military duties.
---
id: wants_fee_waiver
question: |
  Fee waiver eligibility
subquestion: |
  Based on the amount of your claim, the filing fee will be ${ currency(filing_fee) }. 
  
  However, if you earn under a certain amount, you can ask the court to help you pay the filing fee.
  
fields:
  - Do you want to find out if you qualify for a fee waiver?: wants_fee_waiver
    datatype: yesnoradio
--- 
code: |
  affidavit_of_indigency.enabled = wants_fee_waiver and is_indigent
---
code: |
  fees['Filing fee'].waive = True
  fees['Filing fee'].amount= filing_fee 
  set_fee_waiver_defaults = True
---
code: |
  affidavitofindigency_attachment.enabled = wants_fee_waiver and is_indigent

---
code: |
  signature_fields = ['users[0].signature'] 
---
id: preview small_claims
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_court_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_small_claims'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: small_claims_preview_question    

---
code: |
  # This is a placeholder for the addresses that will be searched
  # for matching address to court. Edit if court venue is based on 
  # a different address than the user's
  [user.address.address for user in users.complete_elements()]
  addresses_to_search = [user.address for user in users.complete_elements()]+[defendant.address for defendant in other_parties.complete_elements()]
---
id: small claims review screen
event: review_small_claims
question: |
  Review your answers 
review:
  - Edit: al_person_answering
    button: |
      **Are you an attorney?**:
      % if al_person_answering == "attorney":
      Yes
      % else:
      No
      % endif
  - Edit: users.revisit
    button: |
      **${ noun_plural("Plaintiff", users.number_gathered()) }**
      
      % for item in users:
      * ${ item }
      % endfor
  - Edit: attorneys.revisit
    button: |
      % if attorneys.there_are_any:
        % if users.number_gathered() == 1:
        **Plaintiff's ${ noun_plural("attorney", attorneys.number_gathered()) }**
        % else:
        **Plaintiffs' ${ noun_plural("attorney", attorneys.number_gathered()) }**
        % endif
      % else:
      **No attorneys**
      % endif
      
      % for item in attorneys:
      * ${ item }
      % endfor
  - Edit: defendants.revisit
    button: |
      **${ noun_plural("Defendant", users.number_gathered()) }**

      % for item in defendants:
      * ${ item }
      % endfor
  - Edit: trial_court
    button: |
      **Court:**
      ${ trial_court }
  - Edit: reason_for_suing_defendant
    button: |
      **Statement of claim:**
      > ${ single_paragraph(reason_for_suing_defendant) }
  - Edit: defendant_owes_amount
    button: |
      **Amount of claim:** 
      ${ currency(defendant_owes_amount) }
  - Edit: exhibit_attachment.exhibits.has_exhibits
    button: |
      **Are the exhibits attached?**
      
      % if exhibit_attachment.exhibits.has_exhibits:
      Yes
      % elif not exhibit_attachment.exhibits.has_exhibits:
      No
      % endif
  - note: |
      **Supporting exhibits**:
      
      % if exhibit_attachment.exhibits.there_are_any:
      ${ exhibit_attachment.exhibits.in_progress_exhibits }
      % else:
      You have not attached any exhibits yet.
      % endif

      ${ exhibit_attachment.exhibits.add_action() }
    css class: bg-secondary-subtle
    show if: exhibit_attachment.exhibits.has_exhibits
  - Edit: is_willing_mediation
    button: |
      **Are you willing to mediate?** 
      % if is_willing_mediation == True:
      Yes
      % else:
      No
      % endif
  - Edit: ask_affidavit_questions
    button: |
      **Affidavit of indigency:**
      ${ ask_affidavit_questions }
  - Edit: user_signature
    button: |
      **Signature:**
      ${ users[0].signature }
  - Edit: signature_date
    button: |
      **Date of signature:**
      ${ signature_date }
---
continue button field: users.revisit
question: |
  Edit plaintiffs
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
  - Signature: |
      row_item.signature if defined("row_item.signature") else ""
edit:
  - name.first
  - address.address
  - phone_number
  - signature
confirm: True
---
continue button field: attorneys.revisit
question: |
  Edit attorneys
subquestion: |
  ${ attorneys.table }

  ${ attorneys.add_action() }
---
table: attorneys.table
rows: attorneys
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
  - Zip code: | 
      row_item.address.zip if defined ( "attorneys[i].address.zip" ) else""
  - BBO number: | 
      row_item.bbo_number if defined ( "attorneys[i].bbo_number" ) else""
edit:
  - name.first
  - address.address
  - phone_number
  - address.zip
confirm: True
---
continue button field: defendants.revisit
question: |
  Edit defendants
subquestion: |
  ${ defendants.table }

  ${ defendants.add_action() }
---
table: defendants.table
rows: defendants
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
edit:
  - name.first
  - address.address
  - phone_number
confirm: True
---
id: revisit exhibit_attachment
continue button field: exhibit_attachment.revisit
question: |
  Edit your supporting exhibits
subquestion: |
  ${ exhibit_attachment.exhibits.rearrange_exhibits_table }

  ${ exhibit_attachment.add_action() }
---
id: download_small_claims
event: small_claims_download
question: |
  All done
subquestion: |
  Thank you, ${users}. Your form is ready to download and deliver.
  
  View, download, and send your form below. Click the "Edit answers" button to fix any mistakes.

  ${ action_button_html(url_action('review_small_claims'), label='Edit answers', color='info') }
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }
  
progress: 100
---
# ALDocument objects specify the metadata for each template
objects:
  - small_claims_Post_interview_instructions: ALDocument.using(title="Instructions", filename="small_claims_next_steps.docx", enabled=True, has_addendum=False)
  - small_claims_attachment: ALDocument.using(title="Small claims", filename="small_claims", enabled=True, has_addendum=False, )
  - affidavit_of_indigency: ALDocument.using(filename=&quot;affidavit-of-indigency.pdf&quot;, title=&quot;Affidavit of Indigency&quot; enabled=True)
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[small_claims_Post_interview_instructions, small_claims_attachment, exhibit_attachment, affidavitofindigency_attachment], filename="small_claims", title="All forms to download for your records", enabled=True)
  - al_court_bundle: ALDocumentBundle.using(elements=[small_claims_attachment, exhibit_attachment, affidavitofindigency_attachment], filename="small_claims", title="All forms to deliver to court", enabled=True)
---
# Each attachment defines a key in an ALDocument. We use `i` as the placeholder here so the same template is 
# used for "preview" and "final" keys, and logic in the template checks the value of 
# `i` to show or hide the user's signature
attachment:
  name: Post-interview-Instructions
  filename: small_claims_next_steps
  docx template file: small_claims_next_steps.docx
  variable name: small_claims_Post_interview_instructions[i]
  skip undefined: True
  tagged pdf: True
---
attachment:
  name: small claims
  filename: small_claims
  variable name: small_claims_attachment[i]
  skip undefined: True
  pdf template file: small_claims.pdf
  fields:
      - "bmc": |
             ${ trial_court.department == "Boston Municipal Court"  }
      - "district": |
             ${ trial_court.department == "District Court" } 
      - "housing": |
             ${ trial_court.department == "Housing Court" }
      - "court_division": ${ trial_court.division }
      - "attorney_name": ${ attorneys[0] }
      - "user_name": ${ users[0] }
      - "attorney_address_line_one": ${ attorneys[0].address.line_one() }
      - "user_address_line_one": ${ users[0].address.line_one() }
      - "user_address_line_two": ${ users[0].address.line_two() }
      - "attorney_address_line_two": ${ attorneys[0].address.line_two() }
      - "user_phone_number": ${ users[0].phone_number }
      - "user_name_business": ${ users[0].name_business }
      - "attorney_phone_number": ${ attorneys[0].phone_number }
      - "bbo_number": ${ attorneys[0].bbo_number }
      - "defendant1_name": ${ defendants[0] }
      - "defendant2_name": ${ defendants[1] }
      - "defendant1_address_line_one": ${ defendants[0].address.line_one() }
      - "defendant2_address_line_one": ${ defendants[1].address.line_one() }
      - "defendant2_address_line_two": ${ defendants[1].address.line_two() }
      - "defendant1_address_line_two": ${ defendants[0].address.line_two() }
      - "defendant1_phone_number": ${ defendants[0].phone_number }
      - "defendant2_phone_number": ${ defendants[1].phone_number }
      - "reason_for_suing_defendant": ${ reason_for_suing_defendant }
      - "defendant_owes_amount": ${ currency(defendant_owes_amount) }
      - "defendant_court_costs_amount": ${ currency(filing_fee) }
      - "signature_date": ${ signature_date }
      - "user_signature": ${ users[0].signature }
      - "is_willing_mediation_yes": ${ is_willing_mediation }
      - "is_willing_mediation_no": ${ not is_willing_mediation }
      - "not_current_military_defendant": ${ defendants.filter(is_current_military = False) }
      - "not_current_military": ${ any([person.is_current_military == False for person in defendants])}
      - "current_military_defendant": ${ defendants.filter(is_current_military = True) }
      - "unknown_current_military": ${ any([person.is_current_military is None for person in defendants])}
      - "is_current_military": ${ any([person.is_current_military for person in defendants])}
    #  - "military_affidavit_facts": ${ other_parties[0].military_affidavit_facts + ";" + other_parties[1].military_affidavit_facts }
      - "military_affidavit_facts": |
          ${ "; ".join([person.military_affidavit_facts for person in other_parties]) }
      - "user_is_defendant": ${ al_person_answering == "defendant" }
      - "user_is_attorney": ${ al_person_answering == "attorney" }
