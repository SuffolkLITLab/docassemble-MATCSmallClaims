include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.MassAccess:massaccess.yml
  - docassemble.ALAffidavitOfIndigency:affidavit_body.yml
  - docassemble.demo:data/questions/examples/cards.yml
  - docassemble.ALToolbox:collapse_template.yml
---
metadata:
  title: >-
    Small Claims
  short title: >-
    Small Claims
  description: |-
    This interview helps a Massachusetts plaintiff file a notice of their small claim with the court.
  can_I_use_this_form: |
    If you are a plaintiff, you can use this interview to file a notice of your small claim with the court.
  before_you_start: |
    This interview will help you to file a notice of your small claim with the court.
  maturity: production
  estimated_completion_minutes: 60
  estimated_completion_delta: 30
  LIST_topics: 
    - "MO-10-00-00-00"
  tags:
    - "MO-10-00-00-00"
  authors:
    - Nava Ebadollahi
    - Mark Marotta
    - Nicole Dimitri
    - Sam Glover
    - Ary Ascencio
  original_form: []
  original_form_published_on: 2024-06-05
  allowed_courts: 
    - "Boston Municipal Court"
    - "Housing Court"
    - "District Court" 
  typical_role: "plaintiff"
  al_weaver_version: "1.10.3"
  generated_on: "2024-06-05"
  languages:
    - en 
  jurisdiction: NAM-US-US+MA
  review_date: 2024-06-05
  form_titles:
    - Small claims
  form_numbers: []
  update_notes: |
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "MA"
---
code: |
  github_repo_name =  'docassemble-MATCSmallClaims'
---
code: |
  interview_short_title = "File for small claims"
---
code: |
  al_form_type = "starts_case"  
---
objects:
  - al_logo: DAStaticFile.using(filename="docassemble.MATCTheme:Mass-Trial-Court-Seal-final-color.png")
  - users: ALPeopleList.using(complete_attribute=['name.first', 'address.address', 'phone_number'])
  - attorneys: ALPeopleList.using(complete_attribute=['bbo_number', 'address.address', 'phone_number'])
  - other_parties: ALPeopleList.using(there_are_any=True, complete_attribute= ['address.address', 'phone_number', 'is_current_military'])
  - exhibit_attachment: ALExhibitDocument.using(
          title="Exhibits",
          filename="exhibits",
          add_page_numbers=True,
          include_table_of_contents=True,
          include_exhibit_cover_pages=True,
        )
---
sections:
  - plaintiff_info: Plaintiff information
  - defendant_info: Defendant information
  - court_selection: Court selection
  - claim_details: Your claim
  - mediation: Mediation
  - wants_fee_waiver: Fee waiver
  - review_small_claims: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_small_claims
code: |
  # Set the allowed courts for this interview
  allowed_courts = ['District Court', 'Boston Municipal Court', 'Housing Court']
  small_claims_intro
  
  nav.set_section("plaintiff_info")
  al_person_answering
  if al_person_answering == "attorney":
    attorneys.there_are_any = True
  if al_person_answering == "user":
    attorneys.there_are_any = False
  
  attorneys.gather()
  if attorneys.number_gathered() > 0: 
    attorneys[0].bbo_number
    attorneys[0].address.address
    attorneys[0].phone_number
  set_progress(14)

  users.gather()
  if users.number_gathered() > 0:
    users[0].address.address
    users[0].phone_number
  set_parts(subtitle=str(users))
  set_progress(28)
  
  nav.set_section("defendant_info")
  other_parties.gather()
  defendants
  other_parties[0].address.address
  other_parties[0].phone_number
  other_parties[0].is_current_military
  
  nav.set_section("court_selection")
  set_parts(subtitle=str(users))
  set_progress(42)
  # docket_number
  trial_court.department
  
  nav.set_section("claim_details")
  defendant_owes_amount
  filing_fee
  reason_for_suing_defendant
  if exhibit_attachment.exhibits.has_exhibits:
    exhibit_attachment.exhibits.gather()
  nav.set_section("mediation")
  is_willing_mediation
  trial_court
  set_progress(56)

  nav.set_section("wants_fee_waiver")
  if wants_fee_waiver:
    is_indigent
    set_fee_waiver_defaults

  nav.set_section("review_small_claims")
  users[0].states_above_true
  interview_order_small_claims = True
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  al_intro_screen
  small_claims_intro
  interview_order_small_claims
  signature_date
  small_claims_preview_question 
  users[0].signature
  # Store anonymous data for analytics / statistics
  store_variables_snapshot(
      persistent=True,
      data={
          "zip": showifdef("users[0].address.zip"),
          "reached_interview_end": True,
      },
  )
  small_claims_download
---
features:
  progress bar: True
  bootstrap theme: docassemble.MATCTheme:bootstrap.css
  css: styles.css
---
id: basic questions intro screen
question: |
  File a small claims complaint
subquestion: |
  This will help you fill out the forms to file a small claim by conducting an interview—
  that is, by asking questions in plain language for you to answer. It will not give you 
  legal advice.

  A small claim is a legal process that is less complex than a traditional civil case. Your 
  case will be heard by the Clerk-Magistrate or an Assistant Clerk-Magistrate of the court,
  not by a judge or jury. More information and resources on the small claims process are 
  available on the [Massachusetts self-help website](https://www.mass.gov/small-claims).

  Tap the {green words} in any screen for a definition or more information.

  % if form_approved_for_email_filing:
  Once you have completed this interview, you will be able to electronically file the 
  completed forms in the proper court.
  % else:
  Once you have completed this interview, you will be able to download and print the 
  completed forms to file in the proper court.
  % endif

  If you are ready to begin the interview, please accept the **terms of use and privacy 
  policy**.
  
  % if chat_partners_available().help:
  Live help is currently available in this interview. Click the speech bubble
  (:comment-alt:) in the navigation bar to connect to a live advocate for help.
  % endif
fields:
  - note: |
      ${ display_template(al_terms_of_use, scrollable=True) }
      To continue, you must accept our terms of use
  - I accept the terms of use: acknowledged_information_use
    datatype: yesnowide
    grid: 8
continue button field: al_intro_screen
terms:
  green words: |
    Green words are legal terms or a short way of referring to something that needs more explanation. The definition or explanation pops up when you tap the green words. 
validation code: |
  if not acknowledged_information_use:
    validation_error("You must accept the terms of use to continue.", field="acknowledged_information_use")
---
id: small claims interview info
continue button field: small_claims_intro
question: |
  Information for the small claims complaint process
subquestion: |
  In order to complete this interview you will need to provide:
  
  1. The full name, address, and phone number or email address of anyone you intend to sue
  2. A summary or reason why you are suing them
  3. The military status of anyone you intend to sue (information about verifying military status will be provided)
  
  When you are finished, you will be able to file your claim electronically, or download 
  and print your claim forms so you can deliver them to the courthouse yourself.
  
  You will also need to pay a filing fee. 

  Amount of your claim | Filing fee 
  ---------------------|-----------
  $500 or less         | $40
  $501–2,000           | $50
  $2,001–5,000         | $100 
  $5,001 or more       | $150
  
  If you cannot afford to pay the filing fee you can ask the court for a waiver. You can 
  complete a fee-waiver form during this interview.
  
  Please note that this interview cannot tell you what you should say to meet the legal 
  basis needed for a judge to rule in your favor. The court can provide information about 
  how to file a claim, but it cannot give legal advice.

  Most people take about 30 minutes to complete this interview.
---
id: is user an attorney
question: | 
  Are you an attorney?
fields:
  - no label: al_person_answering
    datatype: radio
    choices: 
      - Yes: attorney
      - No: user
    label above field: True
    under text: |
      If you are an attorney but you are filing this claim on your own behalf, select No.
---
id: attorney information
sets:
  - attorneys[i].name.first
  - attorneys[i].name.last
  - attorneys[i].name.middle
  - attorneys[i].name.suffix
generic object: ALPeopleList
question: |
  % if i == 0:
  What is your name?
  % else:
  Name of the first ${ noun_plural(attorneys.object_name(), 1) }
  % endif
fields:
  - code: |
      attorneys[i].name_fields()
  - "BBO number": attorneys[i].bbo_number
    maxlength: 6
    required: True
    under text: |
      [Click here](https://www.massbbo.org/bbolookup.php) to look up your BBO number.
---
sets:
  - attorneys[i].address.address
  - attorneys[i].address.city
  - attorneys[i].address.zip
  - attorneys[i].address.unit
  - attorneys[i].address.state
  - attorneys[i].address.country
id: attorney's address
generic object: ALIndividual
question: |
  % if i == 0 and al_person_answering == "attorney":
  What is your address?
  % else:
  What is ${ attorneys[i].name }'s address?
  % endif
fields:
  - code: |
      attorneys[i].address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE)
---
id: attorney's additional contact information
generic object: ALIndividual
question: |
  % if i == 0 and al_person_answering == "attorney":
  What is your contact information?
  % else:
  What is ${ attorneys[i].name }'s contact information?
  % endif
fields:
  - Phone: attorneys[i].phone_number
    required: True
  - Email: attorneys[i].email_address
    required: False
---
generic object: ALPeopleList
id: additional attorneys 
question: |
  Are there any other attorneys representing the plaintiff?
subquestion: |
  It is not common to have more than one attorney on a small claim, but you can add more. 
fields:
  - no label: attorneys.there_is_another
    datatype: yesnoradio
---
sets:
  - users[i].name.first
  - users[i].name.last
  - users[i].name.middle
  - users[i].name.suffix  
  - users[i].name.business
id: plaintiff's name
question: |
  % if i == 0 and al_person_answering == "user":
  What is your name?
  % else:
    % if al_person_answering == "attorney":
    What is the ${ ordinal(i) } plaintiff's name?
    % else:
    What is the name of the ${ ordinal_number(i) } plaintiff?
    % endif
  % endif
fields:
  - code: |
      users[i].name_fields(person_or_business="unsure")      
---
id: plaintiff's address
question: |
  % if i == 0 and al_person_answering == "user":
  What is your address?
  % else:
  What is ${ users[i] }'s address?
  % endif
fields:
  - label: |
      % if i > 0 and al_person_answering == "user":
      Same as your address
      % else:
      Same as ${ users[0] }'s address
      % endif
    field: users[i].address
    datatype: object_radio
    choices:
      - users[0].address if defined("users[0].address.address") else None
    object labeler: |
      lambda y: y.on_one_line()      
    none of the above: |
      Somewhere else
    disable others: True
    show if:
      code: |
        i > 0 and defined("users[0].address.address")
  - ${ users[i].address.address_label}: users[i].address.address
    address autocomplete: True
  - ${ users[i].address.unit_label}: users[i].address.unit
    required: False
  - ${ users[i].address.city_label}: users[i].address.city
  - ${ users[i].address.state_label}: users[i].address.state
    code: |
      states_list(country_code=AL_DEFAULT_COUNTRY)
    default: ${ AL_DEFAULT_STATE }
  - ${ users[i].address.zip_label}: users[i].address.zip
    required: False
---
template: why_contact_info_needed_template
subject: |
  Why do I need to give my contact information?
content: | 
  It is important that the person or organization you deliver this form to
  is able to contact you. Make sure to include at least one way to reach you
  other than mail.
---
id: first plaintiff's contact information
question: |
  % if al_person_answering == "user":
  What is your contact information??
  % else:
  What is ${ users[0] }'s contact information?
  % endif
subquestion: |
  % if al_person_answering == "user":
  Include at least **one** way to reach you other than by mail.
  
  ${ collapse_template(why_contact_info_needed_template) }
  % else:
  Include at least **one** way to reach ${ users[0] } other than by mail.
  % endif
fields:  
  - Phone number: users[0].phone_number
    required: False
  - Email address: users[0].email    
    datatype: email
    required: False
  - Other ways to reach you: users[0].other_contact_method
    input type: area
    required: False
    help: |
      If you do not have a phone number or email, provide
      specific contact instructions. For example, use a friend's phone number.
      But the friend must be someone you can rely on to give you a
      message.
validation code: |
  if (not showifdef('users[0].phone_number') and \
      (not showifdef('users[0].mobile_number')) and \
      (not showifdef('users[0].email')) and \
      (not showifdef('users[0].other_contact_method'))):
    validation_error(word("You need to provide at least one contact method."), field="users[0].other_contact_method")
---
id: additional plaintiff's contact information
question: |
  What is ${ users[i] }'s contact information?
subquestion: |
  Include at least **one** way to reach ${ users[i] } other than by mail.
fields:  
  - Phone number: users[i].phone_number
    required: False
  - Email address: users[i].email    
    datatype: email
    required: False
  - Other ways to reach you: users[i].other_contact_method
    input type: area
    required: False
    help: |
      If you do not have a phone number or email, provide
      specific contact instructions. For example, use a friend's phone number.
      But the friend must be someone you can rely on to give you a
      message.
validation code: |
  if (not showifdef('users[i].phone_number') and \
      (not showifdef('users[i].mobile_number')) and \
      (not showifdef('users[i].email')) and \
      (not showifdef('users[i].other_contact_method'))):
    validation_error(word("You need to provide at least one contact method."), field="users[i].other_contact_method")
---
id: any other opposing parties
question: |
  % if user_started_case:
  Is there any other **defendant**?
  % else:
  Is there any one else **on your side**?
  % endif
fields:
  - no label: other_parties.there_is_another
    datatype: yesnoradio
---
id: any other plaintiffs
question: |
  % if al_person_answering == "attorney":
  Are there additional plaintiffs?
  % else:
  Is anyone else on your side of the case?
  % endif
subquestion: |
  % if len(users.elements) > 1:  
  So far you have told us about ${comma_and_list(users.complete_elements())}.
  % endif
fields:
  - no label: users.there_is_another
    datatype: yesnoradio
---
if: |
  len(all_matches) and all_courts.filter_courts(allowed_courts) 
id: choose a court (courts matching provided address were found)
question: |
  % if al_form_type == 'starts_case':
  What court do you want to file in?
  % elif al_form_type == 'appeal':
  What is the name of the trial court your case was originally filed in?
  % else:
  What court is your case in?
  % endif
subquestion: |
  % if not al_form_type == 'starts_case':
  Look at your court paperwork. Match the name listed there.
  % endif

  % if len(all_matches) > 0:
  Below is a map of the court(s) that serve
  the address you gave us, 
  % if isinstance(addresses_to_search, Iterable):
  ${comma_and_list([address.on_one_line() for address in addresses_to_search],comma_string='; ')}.
  % else:
  ${addresses_to_search.on_one_line()}
  % endif
  
  ${map_of(combined_locations(all_matches))}
  % endif
  
  ${ collapse_template(how_to_pick_court_help_template) }  
fields:
  - no label: trial_court
    datatype: object_radio
    choices: all_matches
    none of the above: True
    disable others: True
    object labeler: court_short_description
    show if: 
      code: |
        len(all_matches)      
  - note: |
      Does the list above look wrong? If your case was filed in
      a court we didn't list, choose from the full list below.
    show if: 
      code: |
        len(all_matches)
  - no label: trial_court
    datatype: object
    object labeler: court_short_label
    choices: all_courts.filter_courts(allowed_courts)
    css class: not-required-if-disabled
---
template: claims_greater_than_7000
subject:  |
  Claims greater than $7,000
content:  |
  The base amount you are suing for (including the value of property) must be $7,000 or 
  less. There are two exceptions:
  
  1. If your claim is based on property damage from an automobile accident, the amount of your claim can be more than $7,000.
  2. If you are suing for unfair and deceptive practices under [Mass. Gen. Laws ch. 93A](https://malegislature.gov/Laws/GeneralLaws/PartI/TitleXV/Chapter93A) or under the security deposit statute, [Mass. Gen. Laws ch. 186, § 15B](https://malegislature.gov/Laws/GeneralLaws/PartII/TitleI/Chapter186/Section15B), the court may award additional damages above the $7,000 limit, but the base amount of your claim must be $7,000 or less.
---
id: claim amount
question: |
  Claim amount
fields: 
  - Amount defendant owes you: defendant_owes_amount
    datatype: currency
    min: 0
  - "Your claim is for more than $7,000": reason_pexceeds_7000
    datatype: radio
    choices:
      - My claim is based on property damage from an auto accident
      - I am suing for unfair and deceptive practices under Chapter 93A or under the security deposit statute; the base amount of my claim is still $7,000 or less
    under text: ${ collapse_template(claims_greater_than_7000) } 
    js show if: |
      val("defendant_owes_amount") > 7000
  - Filing fee: filing_fee
    datatype: currency
    input type: hidden
    min: 0
  - html: |
      <div class="da-container row">
        <span for="filing_fee_display" class="col-md-4 datext-right">Filing fee</span>
        <span class="col-md-8" aria-live="polite">
          $<span id="filing_fee_display">--</span>
        </span>
      </div>
script: |
  <script>
    const fees = [
      {
        min: 0,
        max: 500,
        fee: 40,
      },
      {
        min: 501,
        max: 2000,
        fee: 50,
      },
      {
        min: 2001,
        max: 5000,
        fee: 100,
      },
      {
        min: 5001,
        max: "none",
        fee: 150,
      }
    ];
  
    function getFilingFee() {
      let claimAmount = val("defendant_owes_amount");
      if (!claimAmount) {
        setField("filing_fee", null);
        $("#filing_fee_display").text('--');
        return;
      }
      fees.forEach((el) => {
        if (claimAmount >= el.min && (claimAmount <= el.max || el.max === "none")) {
          setField("filing_fee", el.fee);
          $("#filing_fee_display").text(el.fee);
        }
      });
    }
    if ($(getField("defendant_owes_amount")).val()) {
      getFilingFee();
    }
    $(getField("defendant_owes_amount")).on("change", getFilingFee);
  </script>  
---
id: statement of claim
question: Describe your claim
subquestion: |
  Clearly state your claim so the defendant can understand why you are suing them. Make 
  sure to include:
  
  * The date(s) of the event that is the basis of your claim
  * Your requests for relief
  * A breakdown or calculation showing how you arrived at the amount of your claim

  If a law allows you to seek double or triple the amount of your claim, then you must 
  include this specific information in your statement of claim.

  You will be able to attach supporting documents on the next screen.
fields:
  - Reason for your claim: reason_for_suing_defendant
    input type: area
    rows: 10
    label above field: True
---
template: mediation_learn_more
subject:  |
  Learn more about mediation
content:  |
  To learn more about mediation, click [here](https://www.mass.gov/info-details/about-mediation)
---
id: Additional Information
question: |
  Are you willing to attempt to settle this claim through mediation?
subquestion: | 
  ${ card_start("What is mediation?", color="info", icon="comment") }
  Mediation is when all parties in a lawsuit sit down with a neutral person who helps them discuss the case and tries to negotiate a settlement or resolution.
   
  The Plaintiff must notify the court if they desire mediation. The defendant may consent to mediation on the trial date. You do not lose your right to a trial if you go to mediation and it is unsuccessful. 
  
  ${ card_end() }
  ${ collapse_template(mediation_learn_more) } 
  
  
fields:
  - "Are you willing to mediate?": is_willing_mediation
    datatype: yesnoradio
---    
id: Tell us about a court
question: |
  % if al_form_type == 'starts_case':
  What court do you want to file in?
  % elif al_form_type == 'appeal':
  What is the name of the trial court your case was originally filed in?
  % else:
  What court is your case in?
  % endif
subquestion: |
  % if not al_form_type == 'starts_case':
  Look at your court paperwork. Match the name listed there.
  % endif
  
  ${ collapse_template(how_to_pick_court_help_template) }  
  
  A small claim may be filed in one of three different court departments: District Court, Boston Municipal Court or Housing Court.

  You may bring a small claim in a District or Boston Municipal Court where:
  - at least one plaintiff lives, works, or has a place of business or
  - at least one defendant lives, works, or has a place of business or
  - the rental property is located (if you are filing a claim about a landlord-tenant issue).

  You may bring a small claim in a Housing Court where:
  - the rental property is located (if you are filing a claim about a landlord-tenant issue).
---
sets:
  - other_parties[i].name.first
  - other_parties[i].name.last
  - other_parties[i].name.middle
  - other_parties[i].name.suffix
id: names of opposing parties
question: |
  % if user_started_case:
  Name of ${ ordinal(i) } **defendant** in this
  matter
  % else:
  Name of ${ ordinal(i) } **plaintiff** or petitioner in this matter
  % endif

fields:      
  - field: other_parties[i].person_type
    label: Is this a person, or a business?
    input type: radio
    required: True
    choices:
      - Person: person
      - Business or organization: business

  - note: |
      To find the exact legal name and address of a corporation, visit the Corporate Records Division of the Secretary of State’s Office website by clicking [here](https://corp.sec.state.ma.us/corpweb/CorpSearch/CorpSearch.aspx).
      
      If the defendant is not a corporation and is doing business under a trade name ("doing business as," or d/b/a): 
    
      - Verify the name by calling the city or town hall where the business is located.
    
      - Any entity that does business under a trade name is required to register in the local city or town clerk's office where the business is located.

    show if:
      variable: other_parties[i].person_type
      is: business
  
  - field: other_parties[i].name.first
    label: First name
    required: True
    show if: 
      variable: other_parties[i].person_type
      is: person

  - field: other_parties[i].name.middle
    label: Middle name
    required: False
    show if: 
      variable: other_parties[i].person_type
      is: person

  - field: other_parties[i].name.last
    label: Last name
    required: True
    show if: 
      variable: other_parties[i].person_type
      is: person

  - Suffix: other_parties[i].name.suffix
    required: False
    show if: 
      variable: other_parties[i].person_type
      is: person
    code: |
      name_suffix()

  - field: other_parties[i].name.first
    label: Name of business or organization
    required: True
    show if: 
      variable: other_parties[i].person_type
      is: business
---
id: opposing parties contact information
question: |
  What is ${other_parties[i]}'s contact information?
fields:
  - Phone: other_parties[i].phone_number
    required: True
  - Email: other_parties[i].email_address
    required: False
---
id: Military Affidavit
question: | 
  Is ${other_parties[i]} in the military?
fields:
  - "Does ${other_parties[i]} currently serve in the military?": other_parties[i].is_current_military
    datatype: yesnomaybe
  - note: |
      1. If you know the defendant’s Social Security number or birth date, you can check online if they are on active military duty using the [SCRA Website](https://scra.dmdc.osd.mil/scra/#/home). If you use the SCRA Website, you are required to provide a copy of your search results to the court (typically, a certificate generated from the SCRA Website).
      
      2. If you don't use the SCRA Website, provide details supporting your claim about the defendant's military status. You can include facts from your contacts or communications with the defendant. You may also write to the appropriate military service headquarters, listed [here](https://www.defense.gov/Resources/Military-Departments/), to determine the military status.
      
      In either case, tell us about your search results or correspondences.
    js show if: |
      val("other_parties[i].is_current_military") === "None"
  - "I still don't know": still_unsure
    datatype: yesno
    js show if: |
      val("other_parties[i].is_current_military") === "None"
  - "If yes, how do you know?": other_parties[i].military_affidavit_facts
    input type: area
    maxlength: 1395
    show if:
      variable: other_parties[i].is_current_military
      is: True
  - "Why is it that you don't know ${other_parties[i]}'s military status?": other_parties[i].military_affidavit_facts
    input type: area
    maxlength: 1395
    js show if: | 
      val("still_unsure") == true && val("other_parties[i].is_current_military") === "None"
  - note: |
      The court may require you to post a bond or may issue other orders to protect the rights of the defendant if they are on active military duty.
    show if: still_unsure
comment: |
  % if other_parties.number() > 1: 
  other_parties.as_noun("party")   
  https://assemblyline.suffolklitlab.org/docs/authoring/dynamic_phrasing_based_on_values/#pluralize-a-word-depending-on-the-number-of-people-in-a-list
  
  #The court may require you to post a bond or may issue other orders to protect the rights of the defendant if they are on active military duty.
---
id: wants_fee_waiver
question: |
  You may qualify for a fee waiver
subquestion: |
  Based on the amount of your claim the filing fee will be ${ currency(filing_fee) }. 
  
  However, if you earn under a certain amount you can ask the court to help pay the filing fee.
  
fields:
  - Do you want to find out if you qualify for a fee waiver?: wants_fee_waiver
    datatype: yesnoradio
--- 
code: |
  affidavit_of_indigency.enabled = wants_fee_waiver and is_indigent
---
code: |
  fees['Filing fee'].waive = True
  fees['Filing fee'].amount= filing_fee 
  set_fee_waiver_defaults = True
---
code: |
  affidavitofindigency_attachment.enabled = wants_fee_waiver and is_indigent

---
code: |
  signature_fields = ['users[0].signature'] 
---
id: preview small_claims
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_court_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_small_claims'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: small_claims_preview_question    

---
code: |
  # This is a placeholder for the addresses that will be searched
  # for matching address to court. Edit if court venue is based on 
  # a different address than the user's
  [user.address.address for user in users.complete_elements()]
  addresses_to_search = [user.address for user in users.complete_elements()]+[defendant.address for defendant in other_parties.complete_elements()]
---
id: small claims review screen
event: review_small_claims
question: |
  Review your answers 
review:
  - Edit: al_person_answering
    button: |
      **Are you an attorney?**:
      % if al_person_answering == "attorney":
      Yes
      % else:
      No
      % endif
  - Edit: users.revisit
    button: |
      **${ noun_plural("Plaintiff", users.number_gathered()) }**
      
      % for item in users:
      * ${ item }
      % endfor
  - Edit: attorneys.revisit
    button: |
      % if attorneys.there_are_any:
        % if users.number_gathered() == 1:
        **Plaintiff's ${ noun_plural("attorney", attorneys.number_gathered()) }**
        % else:
        **Plaintiffs' ${ noun_plural("attorney", attorneys.number_gathered()) }**
        % endif
      % else:
      **No attorneys**
      % endif
      
      % for item in attorneys:
      * ${ item }
      % endfor
  - Edit: defendants.revisit
    button: |
      **${ noun_plural("Defendant", users.number_gathered()) }**

      % for item in defendants:
      * ${ item }
      % endfor
  - Edit: trial_court
    button: |
      **Court:**
      ${ trial_court }
  - Edit: defendant_owes_amount
    button: |
      **Amount of claim:** 
      ${ currency(defendant_owes_amount) }
  - Edit: reason_for_suing_defendant
    button: |
      **Statement of claim:**
      > ${ single_paragraph(reason_for_suing_defendant) }
  - Edit: exhibit_attachment.exhibits.has_exhibits
    button: |
      **Exhibits attached?**
      
      % if exhibit_attachment.exhibits.has_exhibits:
      Yes
      % elif not exhibit_attachment.exhibits.has_exhibits:
      No
      % endif
  - note: |
      **Supporting exhibits**:
      
      % if exhibit_attachment.exhibits.there_are_any:
      ${ exhibit_attachment.exhibits.in_progress_exhibits }
      % else:
      You have not attached any exhibits yet
      % endif

      ${ exhibit_attachment.exhibits.add_action() }
    css class: bg-secondary-subtle
    show if: exhibit_attachment.exhibits.has_exhibits
  - Edit: is_willing_mediation
    button: |
      **Willing to mediate?** 
      % if is_willing_mediation == True:
      Yes
      % else:
      No
      % endif
  - Edit: ask_affidavit_questions
    button: |
      **Affidavit of indigency:**
      ${ ask_affidavit_questions }
  - Edit: user_signature
    button: |
      **Signature:**
      ${ users[0].signature }
  - Edit: signature_date
    button: |
      **Date of signature:**
      ${ signature_date }
---
continue button field: users.revisit
question: |
  Edit plaintiffs
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
  - Signature: |
      row_item.signature if defined("row_item.signature") else ""
edit:
  - name.first
  - address.address
  - phone_number
  - signature
confirm: True
---
continue button field: attorneys.revisit
question: |
  Edit attorneys
subquestion: |
  ${ attorneys.table }

  ${ attorneys.add_action() }
---
table: attorneys.table
rows: attorneys
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
  - Zip code: | 
      row_item.address.zip if defined ( "attorneys[i].address.zip" ) else""
  - BBO number: | 
      row_item.bbo_number if defined ( "attorneys[i].bbo_number" ) else""
edit:
  - name.first
  - address.address
  - phone_number
  - address.zip
confirm: True
---
continue button field: defendants.revisit
question: |
  Edit defendants
subquestion: |
  ${ defendants.table }

  ${ defendants.add_action() }
---
table: defendants.table
rows: defendants
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
edit:
  - name.first
  - address.address
  - phone_number
confirm: True
---
id: revisit exhibit_attachment
continue button field: exhibit_attachment.revisit
question: |
  Edit your supporting exhibits
subquestion: |
  ${ exhibit_attachment.exhibits.rearrange_exhibits_table }

  ${ exhibit_attachment.add_action() }
---
id: download small_claims
event: small_claims_download
question: |
  All done
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Edit answers" button to fix any mistakes.

  ${ action_button_html(url_action('review_small_claims'), label='Edit answers', color='info') }
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }
  
progress: 100
---
# ALDocument objects specify the metadata for each template
objects:
  - small_claims_Post_interview_instructions: ALDocument.using(title="Instructions", filename="small_claims_next_steps.docx", enabled=True, has_addendum=False)
  - small_claims_attachment: ALDocument.using(title="Small claims", filename="small_claims", enabled=True, has_addendum=False, )
  - affidavit_of_indigency: ALDocument.using(filename=&quot;affidavit-of-indigency.pdf&quot;, title=&quot;Affidavit of Indigency&quot; enabled=True)
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[small_claims_Post_interview_instructions, small_claims_attachment, exhibit_attachment, affidavitofindigency_attachment], filename="small_claims", title="All forms to download for your records", enabled=True)
  - al_court_bundle: ALDocumentBundle.using(elements=[small_claims_attachment, exhibit_attachment, affidavitofindigency_attachment], filename="small_claims", title="All forms to deliver to court", enabled=True)
---
# Each attachment defines a key in an ALDocument. We use `i` as the placeholder here so the same template is 
# used for "preview" and "final" keys, and logic in the template checks the value of 
# `i` to show or hide the user's signature
attachment:
  name: Post-interview-Instructions
  filename: small_claims_next_steps
  docx template file: small_claims_next_steps.docx
  variable name: small_claims_Post_interview_instructions[i]
  skip undefined: True
  tagged pdf: True
---
attachment:
  name: small claims
  filename: small_claims
  variable name: small_claims_attachment[i]
  skip undefined: True
  pdf template file: small_claims.pdf
  fields:
      - "bmc": |
             ${ trial_court.department == "Boston Municipal Court"  }
      - "district": |
             ${ trial_court.department == "District Court" } 
      - "housing": |
             ${ trial_court.department == "Housing Court" }
      - "court_division": ${ trial_court.division }
      - "attorney_name": ${ attorneys[0] }
      - "user_name": ${ users[0] }
      - "attorney_address_line_one": ${ attorneys[0].address.line_one() }
      - "user_address_line_one": ${ users[0].address.line_one() }
      - "user_address_line_two": ${ users[0].address.line_two() }
      - "attorney_address_line_two": ${ attorneys[0].address.line_two() }
      - "user_phone_number": ${ users[0].phone_number }
      - "user_name_business": ${ users[0].name_business }
      - "attorney_phone_number": ${ attorneys[0].phone_number }
      - "bbo_number": ${ attorneys[0].bbo_number }
      - "defendant1_name": ${ defendants[0] }
      - "defendant2_name": ${ defendants[1] }
      - "defendant1_address_line_one": ${ defendants[0].address.line_one() }
      - "defendant2_address_line_one": ${ defendants[1].address.line_one() }
      - "defendant2_address_line_two": ${ defendants[1].address.line_two() }
      - "defendant1_address_line_two": ${ defendants[0].address.line_two() }
      - "defendant1_phone_number": ${ defendants[0].phone_number }
      - "defendant2_phone_number": ${ defendants[1].phone_number }
      - "defendant_owes_amount": ${ currency(defendant_owes_amount) }
      - "defendant_court_costs_amount": ${ currency(filing_fee) }
      - "reason_for_suing_defendant": ${ reason_for_suing_defendant }
      - "signature_date": ${ signature_date }
      - "user_signature": ${ users[0].signature }
      - "is_willing_mediation_yes": ${ is_willing_mediation }
      - "is_willing_mediation_no": ${ not is_willing_mediation }
      - "not_current_military_defendant": ${ defendants.filter(is_current_military = False) }
      - "not_current_military": ${ any([person.is_current_military == False for person in defendants])}
      - "current_military_defendant": ${ defendants.filter(is_current_military = True) }
      - "unknown_current_military": ${ any([person.is_current_military is None for person in defendants])}
      - "is_current_military": ${ any([person.is_current_military for person in defendants])}
    #  - "military_affidavit_facts": ${ other_parties[0].military_affidavit_facts + ";" + other_parties[1].military_affidavit_facts }
      - "military_affidavit_facts": |
          ${ "; ".join([person.military_affidavit_facts for person in other_parties]) }
      - "user_is_defendant": ${ al_person_answering == "defendant" }
      - "user_is_attorney": ${ al_person_answering == "attorney" }
